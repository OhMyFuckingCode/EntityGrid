/**
 * ==== VARIABLES ====
 */
$entityGrid-cell-padding-y: 6px;
$entityGrid-cell-padding-x: 12px;

.table-container {
  height: calc(100vh - 240px);
  position: relative;
}

/**
 * ==== GRID ====
 * basic styles for grid layout
 */
.grid-table {
  display: table;
  width: 100%;
  .grid-table-header {
    display: table-header-group;
    width: 100%;
    .grid-row {
      .grid-cell {
        z-index: 1;
        white-space: nowrap;
        position: sticky;
        background-color: whitesmoke;
        .sortable-href {
          position: absolute;
          right: 0;
          margin-right: 3px;
        }
      }
      &:first-of-type {
        .grid-cell {
          top: 0;
        }
      }
      &:nth-of-type(2) {
        .grid-cell {
          top: 34px;
        }
      }
      &:last-of-type {
        .grid-cell {
          border-bottom: 1px #ccc solid;
        }
      }
    }
  }
  .grid-table-footer {
    display: table-footer-group;
    width: 100%;
  }
  .grid-table-body {
    display: table-row-group;
    width: 100%;
  }
  .grid-colgroup {
    display: table-column-group;

  }
  .grid-col {
    display: table-column;
  }
  .grid-row {
    display: table-row;
    &:hover {
      background-color: fade-out(black, .95);
    }
    > form {
      display: contents;
    }
  }
  .grid-cell {

    position: relative;
    display: table-cell;
    vertical-align: middle;
    padding: $entityGrid-cell-padding-y $entityGrid-cell-padding-x;
    border-top: $table-border-width solid $table-border-color;
    &.fit {
      width: 1%
    }
  }
  .cell-actions {
    position: sticky;
    right: 0;
    width: 1px;
    background-color: whitesmoke;
    border-left: 1px #ccc solid;
  }

  form {
    .grid-cell:not(:last-of-type) {
      padding: 0;
    }
    .grid-cell {
      .form-control {
        border: none;
        background-color: transparent;

      }
      textarea {
        min-height: 35px;
      }
    }
  }
}

.grid-cell {
  max-width: 300px;
}

/**
 * ==== SEARCH ====
 * common styles for search row of grid
 */
.search {
  &-row {
    background-color: $gray-100;

    input:not([type=submit]):not([type=button]),
    select,
    .chosen-choices {
      border: none;
      background: none;
      border-bottom: 1px solid $gray-200;
      color: $gray-600;
      transition: .6s;
      @include placeholder {
        color: $gray-300;
      }
      &:focus, &:hover {
        background-color: $gray-200;
      }
    }
    .choices__inner {
      min-height: 0;
      padding: 0;
      border: none;
      .choices__input {
        margin: 0;
      }
    }
    .chosen-choices {
      padding: 0;
      min-height: 24px;
      line-height: 0;
    }
    .search-radio {
      position: relative;
      display: inline-block;
      label {
        z-index: 2;
        position: relative;
        margin: 0;
      }
      label:first-of-type {
        width: 100%;
        position: absolute;
        opacity: 0;
      }
      input:not(:first-of-type):checked + label {
        z-index: 0;
      }
      input:not(:checked) + label {
        filter: grayscale(100%);
      }
    }
    .grid-cell {
      padding: 0;
    }
    input:not([type=submit]):not([type=button]),
    select {
      //padding: 0;
    }

    select option:first-child {
      color: $gray-300;
    }

    .date-to {
      top: 50%;
      right: 5px;
      transform: translateY(-50%);
      background-color: $gray-200;
      padding: 4px;
      border-radius: 50%;
      opacity: 0.25;
      height: 30px;
      width: 30px;
      text-align: center;
      transition: .4s;
      &:hover {
        opacity: 1;
      }
    }

    /*.grid-cell:not(:last-of-type):not(:first-child) {
      padding: $entityGrid-cell-padding-y $entityGrid-cell-padding-x/2;
    }*/

    /* chosen.js */
    .chosen-container-multi .chosen-choices li.search-choice {
      height: auto;
      padding: 4px;
      font-size: 10px;
      line-height: 1;
      border: none;
      a {
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        background: $danger;
        transition: .4s;
        &:after {
          content: 'Ã—';
          font-size: 14px;
          transform: translate(-50%, -50%);
          left: 50%;
          top: 50%;
          position: absolute;
        }
        &:hover {
          opacity: 1;
        }
      }
    }

  }
}

/*
 * ======== TABLE TREE =========
 * - for rows with children
 */

$tree-offset: 16px;
$treeBtn-size: 14px;
$treeBtn-size-empty: 8px;
$treeColor-lighten: 12.5%;

.table-tree {

  .btn-tree {
    border-radius: 50%;
    width: $treeBtn-size;
    height: $treeBtn-size;
    position: absolute;
    left: 5px;
    top: 50%;
    transform: translateY(-50%);
    padding: 0;
    border: 0;
    &:after {
      content: '';
      position: absolute;
      width: 27px;
      height: 1px;
      top: 6px;
      right: 0;
    }
    &:empty {
      width: $treeBtn-size-empty;
      height: $treeBtn-size-empty;
      left: 10px;
    }
    i {
      font-size: 10px;
      line-height: 0;
      position: absolute;
      z-index: 100;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
    svg {
      position: absolute;
      width: 10px;
      height: 10px;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }

  .tree-list {
    height: 0;
    &-line-y {
      width: 1px;
      height: 100%;
      background: #2f87cc;
      position: absolute;
      left: 12px;
      top: -50%;
      &.line-y-2 {
        background: lighten($primary, $treeColor-lighten);
        left: 32px;
      }
      &.line-y-3 {
        background: lighten($primary, $treeColor-lighten*2);
        left: 52px;
      }
    }
  }
  .grid-row {
    @for $i from 1 through 4 {
      &.depth-#{$i} {
        .grid-cell:first-child {
          padding-left: ($tree-offset*2) + ( $i * 20 ) !important;
          .btn-tree {
            //left: (12px + $treeBtn-size) + ($tree-offset * ( $i - 1 )) + ( ($i - 1) * 2); //*  ($tree-offset * ( $i - 1.5 ));
            left: (12px + $treeBtn-size) + ($tree-offset * ( $i - 1 ))  + ( ($i - 1) * 3);
            background: lighten($primary, $i * $treeColor-lighten);
            &:empty {
              width: $treeBtn-size-empty;
              height: $treeBtn-size-empty;
              left: ($tree-offset * ($i + 1))  - ($treeBtn-size-empty/2) + ($treeBtn-size-empty * ($i * 0.25));
            }
            &:after {
              background: lighten($primary, $i * $treeColor-lighten);
            }
          }
        }
      }
    }

    .chosen {
      .choices__item {
        padding: 1px 10px;
        border-radius: 0;
      }
    }

    .grid-cell {
      &:first-child {
        padding-left: 32px !important;
        //background-image: url(icons/icon-parent.svg);
        background-repeat: no-repeat;
        background-size: 24px;
        background-position-y: 50%;
      }
    }
  }

}





